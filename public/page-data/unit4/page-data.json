{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/unit4","matchPath":"/unit4/*","result":{"data":{"deck":{"id":"f37dbe09-817d-5312-9088-afd77e338f44","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar themes = [Lidemy];\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  themes: themes,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Fullscreen, {\n    mdxType: \"Fullscreen\"\n  }), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4\\uFF1A\\u4E3B\\u89D2\\u7E3D\\u662F\\u6700\\u5F8C\\u624D\\u767B\\u5834\\uFF1A\\u5BEB\\u7A0B\\u5F0F\\u56C9\")), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.1\\uFF1A\\u5F9E\\u865B\\u64EC\\u78BC\\u5230\\u7A0B\\u5F0F\\u78BC\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u865B\\u64EC\\u78BC\\u5BEB\\u5F97\\u597D\\uFF0C\\u7FFB\\u8B6F\\u6C92\\u56F0\\u64FE\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"陣列加總\\\"\",\n    \"subtitle\": \"\\\"陣列加總\\\"\"\n  }), \"let sum = 0\\nfor (i from 0 to n-1) do\\n  sum += arr[i]\\nend for\\nprint sum\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let sum = 0\\nfor (i from 0 to n-1) do\\n  sum += arr[i]\\nend for\\nprint sum\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"1\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"跟虛擬碼一樣\\\"\",\n    \"subtitle\": \"\\\"跟虛擬碼一樣\\\"\"\n  }), \"let sum = 0\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"2,4\",\n    \"2,4\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"翻譯迴圈\\\"\",\n    \"subtitle\": \"\\\"翻譯迴圈\\\"\"\n  }), \"let sum = 0\\nfor (let i=0; i<n; i++) {\\n  \\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"3\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"3\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"跟虛擬碼一樣\\\"\",\n    \"subtitle\": \"\\\"跟虛擬碼一樣\\\"\"\n  }), \"let sum = 0\\nfor (let i=0; i<n; i++) {\\n  sum += arr[i]\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"5\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"5\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"翻譯 print\\\"\",\n    \"subtitle\": \"\\\"翻譯\",\n    \"print\\\"\": true\n  }), \"let sum = 0\\nfor (let i=0; i<n; i++) {\\n  sum += arr[i]\\n}\\nconsole.log(sum)\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"虛擬碼\\\"\",\n    \"subtitle\": \"\\\"虛擬碼\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"程式碼\\\"\",\n    \"subtitle\": \"\\\"程式碼\\\"\"\n  }), \"\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"也可以改成 i <= n-1\\\"\",\n    \"subtitle\": \"\\\"也可以改成\",\n    \"i\": true,\n    \"<\": \"\",\n    \"n-1\\\"\": true\n  }), \"let sum = 0\\nfor (let i=0; i<n; i++) {\\nfor (let i=0; i<=n-1; i++) {\\n  sum += arr[i]\\n}\\nconsole.log(sum)\\n\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"找最大值\\\"\",\n    \"subtitle\": \"\\\"找最大值\\\"\"\n  }), \"let max = arr[0]\\nfor (i from 0 to n-1) do\\n  if (arr[i] > max) do\\n    max = arr[i]\\n  end if\\nend for\\nprint max\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"1\"\n  }), \"let max = arr[0]\\nfor (i from 0 to n-1) do\\n  if (arr[i] > max) do\\n    max = arr[i]\\n  end if\\nend for\\nprint max\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"跟程式碼一樣\\\"\",\n    \"subtitle\": \"\\\"跟程式碼一樣\\\"\"\n  }), \"let max = arr[0]\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"2,6\",\n    \"2,6\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"翻譯迴圈，這邊用 i<=n-1\\\"\",\n    \"subtitle\": \"\\\"翻譯迴圈，這邊用\",\n    \"i<\": \"n-1\\\"\"\n  }), \"let max = arr[0]\\nfor (let i=0; i<=n-1; i++) {\\n  \\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"3,5\",\n    \"3,5\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"翻譯判斷式\\\"\",\n    \"subtitle\": \"\\\"翻譯判斷式\\\"\"\n  }), \"let max = arr[0]\\nfor (let i=0; i<=n-1; i++) {\\n  if (arr[i] > max) {\\n\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"4\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"4\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"跟程式碼一樣\\\"\",\n    \"subtitle\": \"\\\"跟程式碼一樣\\\"\"\n  }), \"let max = arr[0]\\nfor (let i=0; i<=n-1; i++) {\\n  if (arr[i] > max) {\\n    max = arr[i]\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"7\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"7\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"翻譯 print\\\"\",\n    \"subtitle\": \"\\\"翻譯\",\n    \"print\\\"\": true\n  }), \"let max = arr[0]\\nfor (let i=0; i<=n-1; i++) {\\n  if (arr[i] > max) {\\n    max = arr[i]\\n  }\\n}\\nconsole.log(max)\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"虛擬碼\\\"\",\n    \"subtitle\": \"\\\"虛擬碼\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"程式碼\\\"\",\n    \"subtitle\": \"\\\"程式碼\\\"\"\n  }), \"\")))), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.2\\uFF1A\\u51FD\\u5F0F\\u586B\\u7A7A\\u6CD5\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u76EE\\u7684\"), mdx(\"p\", null, \"\\u907F\\u514D\\u521D\\u5FC3\\u8005\\u6BBA\\u624B\\uFF1A\\u96D9\\u5C64\\u8FF4\\u5708\"), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://oj.lidemy.com/problem/1020\"\n  }), \"LIOJ 1020\\uFF1A\\u5224\\u65B7\\u8CEA\\u6578\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u65B9\\u6CD5\"), mdx(\"p\", null, \"\\u52A0 function \\u52A0\\u7206\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"虛擬碼\\\"\",\n    \"subtitle\": \"\\\"虛擬碼\\\"\"\n  }), \"for (i from 0 to n-1) do\\n  if (arr[i] \\u662F\\u8CEA\\u6578) do\\n    print \\\"Prime\\\"\\n  else\\n    print \\\"Composite\\\"\\n  end if\\nend for\\n\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"虛擬碼\\\"\",\n    \"subtitle\": \"\\\"虛擬碼\\\"\"\n  }), \"for (i from 0 to n-1) do\\n  if (arr[i] \\u662F\\u8CEA\\u6578) do\\n    print \\\"Prime\\\"\\n  else\\n    print \\\"Composite\\\"\\n  end if\\nend for\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"程式碼\\\"\",\n    \"subtitle\": \"\\\"程式碼\\\"\"\n  }), \"for (let i=0; i<n; i++) {\\n  if (arr[i] \\u662F\\u8CEA\\u6578){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"虛擬碼\\\"\",\n    \"subtitle\": \"\\\"虛擬碼\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:11 subtitle=\\\"變成函式\\\"\",\n    \"1:11\": true,\n    \"subtitle\": \"\\\"變成函式\\\"\"\n  }), \"for (let i=0; i<n; i++) {\\n  if (isPrime(arr[i])){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\\nfunction isPrime(n) {\\n  // TODO\\n}\\n\")))), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"簡化問題 - 實作 isPrime\\\"\",\n    \"subtitle\": \"\\\"簡化問題\",\n    \"-\": true,\n    \"實作\": true,\n    \"isPrime\\\"\": true\n  }), \"for (let i=0; i<n; i++) {\\n  if (isPrime(arr[i])){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\\nfunction isPrime(n) {\\n  // TODO\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"9:17 subtitle=\\\"實作判斷質數邏輯\\\"\",\n    \"9:17\": true,\n    \"subtitle\": \"\\\"實作判斷質數邏輯\\\"\"\n  }), \"for (let i=0; i<n; i++) {\\n  if (isPrime(arr[i])){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\\nfunction isPrime(n) {\\n  if (n === 1) return false\\n  for (let i=2; i<n; i++) {\\n    if (n % i === 0) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"打完收工\\\"\",\n    \"subtitle\": \"\\\"打完收工\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"1:7 subtitle=\\\"第一部分：主要邏輯\\\"\",\n    \"1:7\": true,\n    \"subtitle\": \"\\\"第一部分：主要邏輯\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"9:17 subtitle=\\\"第二部分：輔助函式\\\"\",\n    \"9:17\": true,\n    \"subtitle\": \"\\\"第二部分：輔助函式\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u51FD\\u5F0F\\u586B\\u7A7A\\u6CD5 = \\u5207\\u5272\\u554F\\u984C\"), mdx(\"hr\", null), mdx(\"p\", null, \"\\u5370\\u51FA\\u9663\\u5217\\u4E2D\\u7684\\u8CEA\\u6578\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"= \\u5370\\u51FA\\u9663\\u5217 + \\u8CEA\\u6578\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"試著把 function 加回去\\\"\",\n    \"subtitle\": \"\\\"試著把\",\n    \"function\": true,\n    \"加回去\\\"\": true\n  }), \"for (let i=0; i<n; i++) {\\n  if (isPrime(arr[i])){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\\nfunction isPrime(n) {\\n  if (n === 1) return false\\n  for (let i=2; i<n; i++) {\\n    if (n % i === 0) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:8 subtitle=\\\"1. 把函式拿掉，維持主要邏輯不變\\\"\",\n    \"1:8\": true,\n    \"subtitle\": \"\\\"1.\",\n    \"把函式拿掉，維持主要邏輯不變\\\"\": true\n  }), \"for (let i=0; i<n; i++) {\\n  let isPrime = true\\n  if (isPrime){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"2. 加上判斷質數程式碼\\\"\",\n    \"subtitle\": \"\\\"2.\",\n    \"加上判斷質數程式碼\\\"\": true\n  }), \"for (let i=0; i<n; i++) {\\n  let isPrime = true\\n  for (let j=2; j<arr[i]; j++) {\\n    if (arr[i] % j === 0) {\\n      isPrime = false\\n      break\\n    }\\n  }\\n  if (isPrime){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"3. 別忘了 edge case\\\"\",\n    \"subtitle\": \"\\\"3.\",\n    \"別忘了\": true,\n    \"edge\": true,\n    \"case\\\"\": true\n  }), \"for (let i=0; i<n; i++) {\\n  let isPrime = true\\n  if (arr[i] === 1) {\\n    isPrime = false\\n  }\\n  for (let j=2; j<arr[i]; j++) {\\n    if (arr[i] % j === 0) {\\n      isPrime = false\\n      break\\n    }\\n  }\\n  if (isPrime){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"\"))), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"函式版\\\"\",\n    \"subtitle\": \"\\\"函式版\\\"\"\n  }), \"for (let i=0; i<n; i++) {\\n  if (isPrime(arr[i])){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\\nfunction isPrime(n) {\\n  if (n === 1) return false\\n  for (let i=2; i<n; i++) {\\n    if (n % i === 0) {\\n      return false\\n    }\\n  }\\n  return true\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"混在一起版\\\"\",\n    \"subtitle\": \"\\\"混在一起版\\\"\"\n  }), \"for (let i=0; i<n; i++) {\\n  let isPrime = true\\n  if (arr[i] === 1) {\\n    isPrime = false\\n  }\\n  for (let j=2; j<arr[i]; j++) {\\n    if (arr[i] % j === 0) {\\n      isPrime = false\\n      break\\n    }\\n  }\\n  if (isPrime){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\"))), mdx(Step, {\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"9:17 subtitle=\\\"函式版\\\"\",\n    \"9:17\": true,\n    \"subtitle\": \"\\\"函式版\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"2:11 subtitle=\\\"混在一起版\\\"\",\n    \"2:11\": true,\n    \"subtitle\": \"\\\"混在一起版\\\"\"\n  }), \"\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u65B9\\u6CD5\"), mdx(\"p\", null, \"\\u52A0 function \\u52A0\\u7206\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"for (let i=0; i<n; i++) {\\n  handleNumber(arr[i])\\n}\\n\\nfunction handleNumber(n) {\\n  if (isPrime(n)){\\n    console.log(\\\"Prime\\\")\\n  } else {\\n    console.log(\\\"Composite\\\")\\n  }\\n}\\n\\nfunction isPrime(n) {\\n  // \\u7701\\u7565\\n}\\n\"))), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.3\\uFF1A\\u7C21\\u5316\\u6CD5\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u8981\\u5BEB\\u597D\\u6587\\u7AE0\\uFF0C\\u5148\\u5F9E\\u5BEB\\u53E5\\u5B50\\u958B\\u59CB\"), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u96E3\\u7684\\u89E3\\u4E0D\\u51FA\\u4F86\\uFF0C\\u5148\\u89E3\\u7C21\\u5316\\u7248\\u7684\"), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://oj.lidemy.com/problem/1021\"\n  }), \"LIOJ 1021\\uFF1A\\u597D\\u591A\\u661F\\u661F\")), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u4E0D\\u6703\\u8F38\\u51FA n \\u500B\\uFF0C\\u5C31\\u5148\\u8F38\\u51FA\\u4E00\\u500B\\u5C31\\u597D\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"for (let i=1; i<=N; i++) {\\n  console.log('*')\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"接著搭配函式填空法\\\"\",\n    \"subtitle\": \"\\\"接著搭配函式填空法\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"加上函式\\\"\",\n    \"subtitle\": \"\\\"加上函式\\\"\"\n  }), \"for (let i=1; i<=N; i++) {\\n  printStar(i)\\n}\\n\\nfunction printStar(n) {\\n  // TODO: \\u5370\\u51FA n \\u500B\\u661F\\u661F\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"問題被簡化成：如何印出 n 個星星\\\"\",\n    \"subtitle\": \"\\\"問題被簡化成：如何印出\",\n    \"n\": true,\n    \"個星星\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"利用迴圈重複加上星星\\\"\",\n    \"subtitle\": \"\\\"利用迴圈重複加上星星\\\"\"\n  }), \"for (let i=1; i<=N; i++) {\\n  printStar(i)\\n}\\n\\nfunction printStar(n) {\\n  let s = ''\\n  for(let i=1; i<=n; i++) {\\n    s += '*'\\n  }\\n  console.log(s)\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"解完簡單的，難的就一起解決了\\\"\",\n    \"subtitle\": \"\\\"解完簡單的，難的就一起解決了\\\"\"\n  }), \"\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u628A\\u5927\\u554F\\u984C\\u8B8A\\u6210\\u5C0F\\u554F\\u984C\"), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u96FB\\u8166\\u58DE\\u4E86\"), mdx(\"p\", null, \"\\u54EA\\u88E1\\u58DE\\uFF1F\\u4E3B\\u6A5F\\u9084\\u662F\\u87A2\\u5E55\\u9084\\u662F\\u7DB2\\u8DEF\\uFF1F\"), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u96FB\\u8166\\u4E3B\\u6A5F\\u58DE\\u4E86\"), mdx(\"p\", null, \"\\u54EA\\u88E1\\u58DE\\uFF1F\\u8A18\\u61B6\\u9AD4\\uFF1FCPU\\uFF1F\\u4E3B\\u6A5F\\u677F\\uFF1F\"), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u96FB\\u6E90\\u4F9B\\u61C9\\u5668\\u58DE\\u4E86\"), mdx(\"p\", null, \"\\u63DB\\u96FB\\u6E90\\u4F9B\\u61C9\\u5668\\uFF0C\\u641E\\u5B9A\"), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.4\\uFF1A\\u5BEB\\u7A0B\\u5F0F\\u4E09\\u5BF6\\uFF1A\\u8FF4\\u5708\\u3001\\u51FD\\u5F0F\\u3001\\u5224\\u65B7\\u5F0F\")), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u9019\\u984C\\u662F\\u4E0D\\u662F\\u53EF\\u4EE5\\u7528 array map \\u89E3\\uFF1F\"), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u9019\\u984C\\u662F\\u4E0D\\u662F\\u53EF\\u4EE5\\u7528 array filter \\u89E3\\uFF1F\"), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u9019\\u984C\\u662F\\u4E0D\\u662F\\u53EF\\u4EE5\\u7528 array reduce \\u89E3\\uFF1F\"), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u9019\\u984C\\u662F\\u4E0D\\u662F\\u53EF\\u4EE5\\u7528 xxx \\u89E3\\uFF1F\"), mdx(\"hr\", null), mdx(\"h2\", null, \"\\u5927\\u90E8\\u5206\\u7684\\u984C\\u76EE\\uFF0C\\u9700\\u8981\\u7684\\u5C31\\u53EA\\u6709\\u4E09\\u500B\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u8FF4\\u5708\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u51FD\\u5F0F\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u5224\\u65B7\\u5F0F\")), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.5\\uFF1A\\u5BE6\\u6230\\uFF1A\\u5370\\u51FA\\u91D1\\u5B57\\u5854\")), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://oj.lidemy.com/problem/1022\"\n  }), \"LIOJ 1022\\uFF1A\\u5370\\u51FA\\u91D1\\u5B57\\u5854\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u89C0\\u5BDF\\u898F\\u5F8B\"), mdx(\"p\", null, \"\\u70BA\\u4E86\\u65B9\\u4FBF\\u8D77\\u898B\\uFF0C\\u7A7A\\u683C\\u7528 _ \\u4EE3\\u66FF\"), mdx(\"hr\", null), mdx(CodeSurferColumns, {\n    mdxType: \"CodeSurferColumns\"\n  }, mdx(Step, {\n    title: \"\\u5C0B\\u627E\\u898F\\u5F8B\",\n    mdxType: \"Step\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"n=1\\\"\",\n    \"subtitle\": \"\\\"n\"\n  }), \"*\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"n=2\\\"\",\n    \"subtitle\": \"\\\"n\"\n  }), \"_*\\n***\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"n=3\\\"\",\n    \"subtitle\": \"\\\"n\"\n  }), \"__*\\n_***\\n*****\\n\")))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u898F\\u5F8B\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u4E00\\u5171\\u6709 n \\u5C64\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u7B2C i \\u5C64\\u6703\\u6709 2i - 1 \\u500B\\u661F\\u661F\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u661F\\u661F\\u6703\\u7F6E\\u4E2D\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u9700\\u8981 n - i \\u500B\\u7A7A\\u767D\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"函式填空法\\\"\",\n    \"subtitle\": \"\\\"函式填空法\\\"\"\n  }), \"for(let i=1; i<=n; i++) {\\n  printLayer(i, n)\\n}\\n\\nfunction printLayer(i, n) {\\n  \\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"2\": true,\n    \"className\": \"language-diff\",\n    \"metastring\": \"2 subtitle=\\\"要把第 i 層跟全部有幾層一起傳進去\\\"\",\n    \"subtitle\": \"\\\"要把第\",\n    \"i\": true,\n    \"層跟全部有幾層一起傳進去\\\"\": true\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"加上一個輔助的函式\\\"\",\n    \"subtitle\": \"\\\"加上一個輔助的函式\\\"\"\n  }), \"for(let i=1; i<=n; i++) {\\n  printLayer(i, n)\\n}\\n\\nfunction printLayer(i, n) {\\n  \\n}\\n\\nfunction repeat(str, n) {\\n  let s = ''\\n  for (let i=1; i<=n; i++) {\\n    s += str\\n  }\\n  return s\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"按照規律把答案填上去\\\"\",\n    \"subtitle\": \"\\\"按照規律把答案填上去\\\"\"\n  }), \"for(let i=1; i<=n; i++) {\\n  printLayer(i, n)\\n}\\n\\nfunction printLayer(i, n) {\\n  // \\u7A7A\\u767D + \\u661F\\u661F\\n  let str = repeat(' ', n - i)+ repeat('*', 2*i - 1)\\n  console.log(str)\\n}\\n\\nfunction repeat(str, n) {\\n  let s = ''\\n  for (let i=1; i<=n; i++) {\\n    s += str\\n  }\\n  return s\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }), \"\"))), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.6\\uFF1A\\u5BE6\\u6230\\uFF1A\\u4E5D\\u4E5D\\u4E58\\u6CD5\\u8868\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"1*1=1\\n1*2=2\\n...\\n1*9=9\\n2*1=1\\n...\\n9*9=9\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u7C21\\u5316\\u6CD5\"), mdx(\"p\", null, \"\\u5148\\u7522\\u751F \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1*1\"), \" ~ \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1*9\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"  for (let i=1; i<=9; i++) {\\n    console.log('1*' + i + '=' + 1*i)\\n  }\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"暴力九九乘法表\\\"\",\n    \"subtitle\": \"\\\"暴力九九乘法表\\\"\"\n  }), \"  for (let i=1; i<=9; i++) {\\n    console.log('1*' + i + '=' + 1*i)\\n  }\\n\\n  for (let i=1; i<=9; i++) {\\n    console.log('2*' + i + '=' + 2*i)\\n  }\\n\\n  for (let i=1; i<=9; i++) {\\n    console.log('3*' + i + '=' + 3*i)\\n  }\\n\\n  // ...\\u4E0B\\u7565\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"不如先包成函式\\\"\",\n    \"subtitle\": \"\\\"不如先包成函式\\\"\"\n  }), \"  for (let i=1; i<=9; i++) {\\n    console.log('1*' + i + '=' + 1*i)\\n  }\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"1\": true,\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"只是把 1 換成 k\\\"\",\n    \"subtitle\": \"\\\"只是把\",\n    \"換成\": true,\n    \"k\\\"\": true\n  }), \"function printTable(k) {\\n  for (let i=1; i<=9; i++) {\\n    console.log(k + '*' + i + '=' + k*i)\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"就可以變這樣\\\"\",\n    \"subtitle\": \"\\\"就可以變這樣\\\"\"\n  }), \"function printTable(k) {\\n  for (let i=1; i<=9; i++) {\\n    console.log(k + '*' + i + '=' + k*i)\\n  }\\n}\\n\\nprintTable(1)\\nprintTable(2)\\nprintTable(3)\\n// ...\\u4E2D\\u9593\\u7701\\u7565\\nprintTable(9)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"咦？不就是迴圈嗎\\\"\",\n    \"subtitle\": \"\\\"咦？不就是迴圈嗎\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:9\",\n    \"1:9\": true\n  }), \"function printTable(k) {\\n  for (let i=1; i<=9; i++) {\\n    console.log(k + '*' + i + '=' + k*i)\\n  }\\n}\\n\\nfor(let k=1; k<=9; k++) {\\n  printTable(k)\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:13\",\n    \"1:13\": true\n  }), \"// \\u9019\\u500B\\u6703\\u7522\\u751F k*1~k*9\\nfunction printTable(k) {\\n  for (let i=1; i<=9; i++) {\\n    console.log(k + '*' + i + '=' + k*i)\\n  }\\n}\\n\\n// \\u9019\\u500B\\u6703\\u7522\\u751F 1~9\\nfor(let k=1; k<=9; k++) {\\n  printTable(k)\\n}\\n\\n// \\u7D50\\u679C\\uFF1A\\u7522\\u751F 1*1~9*9\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"可是，總有一天要學會雙層迴圈\\\"\",\n    \"subtitle\": \"\\\"可是，總有一天要學會雙層迴圈\\\"\"\n  }), \"\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"for(let k=1; k<=9; k++) {\\n  for (let i=1; i<=9; i++) {\\n    console.log(k + '*' + i + '=' + k*i)\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"1:7\",\n    \"1:7\": true\n  }), \"// \\u9019\\u500B\\u7522\\u751F 1~9\\nfor(let k=1; k<=9; k++) {\\n  // \\u9019\\u500B\\u4E5F\\u7522\\u751F 1~9\\n  for (let i=1; i<=9; i++) {\\n    console.log(k + '*' + i + '=' + k*i)\\n  }\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"來用 debugger 一行行跑\\\"\",\n    \"subtitle\": \"\\\"來用\",\n    \"debugger\": true,\n    \"一行行跑\\\"\": true\n  }), \"\"))), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.7\\uFF1A\\u5BE6\\u6230\\uFF1A\\u5370\\u51FA 1-100 \\u7684\\u5E73\\u65B9\\u6578\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u7C21\\u5316\\u6CD5\"), mdx(\"p\", null, \"\\u5148\\u5370\\u51FA 1~100\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"for (let i=1; i<=100; i++) {\\n    console.log(i)\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"函式填空法\\\"\",\n    \"subtitle\": \"\\\"函式填空法\\\"\"\n  }), \"for (let i=1; i<=100; i++) {\\n    console.log(i)\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"函式填空法\\\"\",\n    \"subtitle\": \"\\\"函式填空法\\\"\"\n  }), \"for (let i=1; i<=100; i++) {\\n  if (isSquare(i)) {\\n    console.log(i)\\n  }\\n}\\n\\nfunction isSquare(n) {\\n  \\n}\\n\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u5982\\u4F55\\u5224\\u65B7\\u5E73\\u65B9\\u6578\\uFF1F\"), mdx(\"p\", null, \"\\u958B\\u6839\\u865F\\uFF1AMath.sqrt(n)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"\\u7121\\u689D\\u4EF6\\u6368\\u53BB\\uFF1AMath.floor(n)\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"for (let i=1; i<=100; i++) {\\n  if (isSquare(i)) {\\n    console.log(i)\\n  }\\n}\\n\\nfunction isSquare(n) {\\n  \\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"subtitle=\\\"加上邏輯\\\"\",\n    \"subtitle\": \"\\\"加上邏輯\\\"\"\n  }), \"for (let i=1; i<=100; i++) {\\n  if (isSquare(i)) {\\n    console.log(i)\\n  }\\n}\\n\\nfunction isSquare(n) {\\n  let root = Math.floor(Math.sqrt(n))\\n  return root * root === n\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\",\n    \"metastring\": \"subtitle=\\\"完成\\\"\",\n    \"subtitle\": \"\\\"完成\\\"\"\n  }), \"\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u53E6\\u4E00\\u7A2E\\u60F3\\u6CD5\"), mdx(\"p\", null, \"\\u5370\\u51FA\\u5E73\\u65B9\\u6578\\uFF0C\\u76F4\\u5230\\u8D85\\u904E 100 \\u70BA\\u6B62\"), mdx(\"hr\", null), mdx(CodeSurfer, {\n    mdxType: \"CodeSurfer\"\n  }, mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"let i=1\\nwhile(i*i <= 100) {\\n  console.log(i*i)\\n  i++\\n}\\n\"))), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Unit4.8\\uFF1AProject4 \\u4ECB\\u7D39\")), mdx(\"hr\", null), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://oj.lidemy.com/problem/1023\"\n  }), \"LIOJ 1023\\uFF1A\\u5370\\u51FA\\u8056\\u8A95\\u6A39\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://oj.lidemy.com/problem/1024\"\n  }), \"LIOJ 1024\\uFF1ANM \\u4E58\\u6CD5\\u8868\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://oj.lidemy.com/problem/1025\"\n  }), \"LIOJ 1025\\uFF1A\\u6C34\\u4ED9\\u82B1\\u6578\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u89E3\\u7B54\\u7BC7\"), mdx(\"p\", null, \"\\u5E95\\u4E0B\\u6709\\u96F7\\uFF0C\\u8ACB\\u5148\\u5B8C\\u6210\\u4F5C\\u696D\\u518D\\u89C0\\u770B\"), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Project4\\uFF1ALIOJ 1023\\uFF1A\\u5370\\u51FA\\u8056\\u8A95\\u6A39\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u89E3\\u984C\\u6D41\\u7A0B\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u89C0\\u5BDF\\u898F\\u5F8B\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u51FD\\u5F0F\\u586B\\u7A7A\\u6CD5\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u586B\\u4E0A\\u7B54\\u6848\")), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Project4\\uFF1ALIOJ 1024\\uFF1ANM \\u4E58\\u6CD5\\u8868\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u89E3\\u984C\\u6D41\\u7A0B\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u8003\\u9A57\\u62BD\\u8C61\\u5316\\u80FD\\u529B\")), mdx(\"hr\", null), mdx(Layout, {\n    mdxType: \"Layout\"\n  }, mdx(\"h1\", null, \"\\u5148\\u5225\\u6025\\u8457\\u5BEB leetcode\"), mdx(\"h2\", null, \"Project4\\uFF1ALIOJ 1025\\uFF1A\\u6C34\\u4ED9\\u82B1\\u6578\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u89E3\\u984C\\u96E3\\u9EDE\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u5982\\u4F55\\u5224\\u65B7\\u5E7E\\u4F4D\\u6578\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u5982\\u4F55\\u53D6\\u51FA\\u5404\\u500B\\u6578\\u5B57\")), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u5982\\u4F55\\u5224\\u65B7\\u5E7E\\u4F4D\\u6578\"), mdx(\"p\", null, \"\\u4E00\\u76F4 / 10\"), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u53D6\\u51FA\\u5404\\u500B\\u6578\\u5B57\"), mdx(\"p\", null, \"% 10 \\u642D\\u914D / 10\"), mdx(\"hr\", null), mdx(\"h1\", null, \"\\u5077\\u5403\\u6B65\"), mdx(\"p\", null, \"\\u8F49\\u6210\\u5B57\\u4E32\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/unit4/*","id":"f37dbe09-817d-5312-9088-afd77e338f44","slug":"/ALG101-too-weak-to-leetcode/public/unit4","title":"先別急著寫 leetcode"}}}